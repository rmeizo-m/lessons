http://code.mu/tasks/php/base/rabota-so-strokovymi-funkciyami-v-php.html
________________________________________________________________________________
Работа с регистром символов
Для решения задач данного блока вам понадобятся следующие функции: strtolower,
strtoupper, ucfirst, lcfirst, ucwords.
________________________________________________________________________________
<?php
echo strtoupper('php');
echo strtolower('PHP');
echo ucfirst('london');
echo lcfirst('London')."\n";
echo ucwords('london is the capital of great britain')."\n";
echo ucfirst(strtolower('LONDON'));
?>
________________________________________________________________________________
Работа с strlen
Для решения задач данного блока вам понадобятся следующие функции: strlen.
 Дана строка 'html css php'. Найдите количество символов в этой строке.
________________________________________________________________________________
<?php
$str ='html css php';
echo strlen($str);
?>
________________________________________________________________________________
Дана переменная $password, в которой хранится пароль пользователя.
Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите
пользователю сообщение о том, что пароль подходит, иначе сообщение о том,
что нужно придумать другой пароль.
________________________________________________________________________________
<?php
$password = "123456789";
$str = strlen($password);
if ($str > 5 && $str < 10){
  echo 'Пароль подходит';
} else{
  echo 'придумайте другой пароль';
}
?>
________________________________________________________________________________
Работа с substr
Для решения задач данного блока вам понадобятся следующие функции: substr.
 Дана строка 'html css php'. Вырежьте из нее и выведите на экран слово 'html',
 слово 'css' и слово 'php'.
________________________________________________________________________________
<?php
$str = 'html css php';
echo substr($str, 5, 3);
?>
________________________________________________________________________________
Дана строка. Вырежите и выведите на экран последние 3 символа этой
строки.
________________________________________________________________________________
<?php
$str = 'html css php';
echo substr($str, -3);
?>
________________________________________________________________________________
Дана строка. Проверьте, что она начинается на 'http://'. Если это так, выведите
'да', если не так - 'нет'.
________________________________________________________________________________
<?php
$s = 'http://vk.com/topic';
$str = substr($s, 0, 7);
if ($str === 'http://'){
  echo "yes";
} else {
  echo "no";
}
?>
________________________________________________________________________________
Дана строка. Проверьте, что она начинается на 'http://' или на 'https://'.
Если это так, выведите 'да', если не так - 'нет'.
________________________________________________________________________________
<?php
$s = 'https://vk.com/topic';
$str1 = substr($s, 0, 7);
$str2 = substr($s, 0, 8);
if ($str1 == 'http://' || $str2 == 'https://'){
  echo "yes";
}else {
  echo "no";
}
?>
________________________________________________________________________________
Дана строка. Проверьте, что она заканчивается на '.png'. Если это так, выведите
'да', если не так - 'нет'.
________________________________________________________________________________
<?php
$png = 'fdrgdfsdgervebhtynubvcecwcrwervgrtbhtny6nbrtrgferveve.png';
$str = substr($png, -4);
$s = '.jpeg';
if($str == $s){
  echo "yes";
}else {
  echo "no";
}
?>
________________________________________________________________________________
Дана строка. Проверьте, что она заканчивается на '.png' или на '.jpg'. Если это
так, выведите 'да', если не так - 'нет'.
________________________________________________________________________________
<?php
$png = 'fdrgdfsdgervebhtynubvcecwcrwervgrtbhtny6nbrtrgferveve.png';
$jpg = 'fdrgdfsdgervebhtynubvcecwcrwervgrtbhtny6nbrtrgferveve.jpg';
$str1 = substr($png, -4);
$str2 = substr($jpg, -4);
if ($str1 == '.png' || $str2 == '.jpg'){
  echo "yes";
}else {
  echo "no";
}
?>
________________________________________________________________________________
Дана строка. Если в этой строке более 5-ти символов - вырежите из
нее первые 5 символов, добавьте троеточие в конец и выведите на
экран. Если же в этой строке 5 и менее символов - просто выведите
эту строку на экран.
________________________________________________________________________________
<?php
$s = 'ht';
$len = strlen($s);
if ($len > 5 ){
  $str = substr($s, 5);
  echo $str.'...';
} else{
  echo $s;
}
?>
________________________________________________________________________________
Работа с str_replace
Для решения задач данного блока вам понадобятся следующие функции: str_replace.
________________________________________________________________________________
<?php
$str = '31.12.2013';
$rep = str_replace('.', '-', $str);
echo $rep;
?>
________________________________________________________________________________
Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2,
а буквы 'c' - на 3.
________________________________________________________________________________
<?php
$stre = 'aabcacbabc';
$rep = str_replace(['a', 'b', 'c'], [1, 2, 3], $stre);
echo $rep;
?>
________________________________________________________________________________
Дана строка с буквами и цифрами, например, '1a2b3c4b5d6e7f8g9h0'.
Удалите из нее все цифры. То есть в нашем случае должна получится
строка 'abcbdefgh'.
________________________________________________________________________________
<?php
$num = [0,1,2,3,4,5,6,7,8,9];
$str = '1a2b3c4b5d6e7f8g9h0';
$res = str_replace($num, '', $str);
echo $res;
?>
________________________________________________________________________________
Работа с strtr
Для решения задач данного блока вам понадобятся следующие функции: strtr.
________________________________________________________________________________
Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b'
- на 2, а буквы 'c' - на 3. Решите задачу двумя способами работы с
функцией strtr (массив замен и две строки замен).
________________________________________________________________________________
<?php
$str = 'aabcacbabc';
$str = strtr($str, ['a'=>'1', 'b'=>'2','c'=>'3']);
echo $str;
echo '_________________';
?>
<?php
$str = 'aabcacbabc';
echo strtr($str, 'abc', '123');
?>
________________________________________________________________________________
Работа с substr_replace
Для решения задач данного блока вам понадобятся следующие функции: substr_replace.
 Дана строка $str. Вырежите из нее подстроку с 3-го символа (отсчет с нуля), 5 штук
 и вместо нее вставьте '!!!'.
________________________________________________________________________________
<?php
$str = substr_replace('asdfggfewxwx', '!!!', 3, 5);
echo $str;
?>
________________________________________________________________________________
Работа с strpos, strrpos
Для решения задач данного блока вам понадобятся следующие функции:
strpos, strrpos.
Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'.
________________________________________________________________________________
<?php
$str = 'abc abc abc';
$str = strpos($str, 'b');
echo $str;
?>
________________________________________________________________________________
Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'.
________________________________________________________________________________
<?php
$str = 'abc abc abc';
$str = strrpos($str, 'b');
echo $str;
?>
________________________________________________________________________________
Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b',
если начать поиск не с начала строки, а с позиции 3.
________________________________________________________________________________
<?php
$str = 'abc abc abc';
$str = strpos($str, 'b', 3);
echo $str;
?>
________________________________________________________________________________
Дана строка 'aaa aaa aaa aaa aaa'. Определите позицию второго пробела.
________________________________________________________________________________
<?php
$str = 'aaa aaa aaa aaa aaa';
$str = strpos($str, ' ', 4);
echo $str;
?>
________________________________________________________________________________
Проверьте, что в строке есть две точки подряд. Если это так - выведите 'есть',
 если не так - 'нет'.
________________________________________________________________________________
<?php
$str = '..';
	if(strpos($str, '..') === true) {
		echo 'да';
	} else {
		echo 'нет';
	}
?>
________________________________________________________________________________
Проверьте, что строка начинается на 'http://'. Если это так -
выведите 'да', если не так - 'нет'.
________________________________________________________________________________
<?php
$str = 'http://';
	if(strpos($str, 'http://') === 0) {
		echo 'да';
	} else {
		echo 'нет';
	}
?>
________________________________________________________________________________
Работа с explode, implode
Для решения задач данного блока вам понадобятся следующие функции: explode,
implode.
 Дана строка 'html css php'. С помощью функции explode запишите
 каждое слово этой строки в отдельный элемент массива.
________________________________________________________________________________
<?php
$str = 'html css php';
$str = explode(' ', $str);
var_dump($str);
?>
________________________________________________________________________________
Дан массив с элементами 'html', 'css', 'php'.
С помощью функции implode создайте строку из этих
элементов, разделенных запятыми.
________________________________________________________________________________
<?php
$arr = ['html', 'css', 'php'];
$res = implode(', ', $arr);
echo $res;
?>
________________________________________________________________________________
В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в
формат '31.12.2013'
________________________________________________________________________________
<?php
$date = '2013-12-31';
$res = explode('-', $date);
echo $res[2].'.'.$res[1].'.'.$res[0];
?>
________________________________________________________________________________
Работа с str_split
Для решения задач данного блока вам понадобятся следующие функции:
str_split.
Дана строка '1234567890'. Разбейте ее на массив с элементами
 '12', '34', '56', '78', '90'.
________________________________________________________________________________
<?php
$num = '1234567890';
var_dump(str_split($num, 2));
?>
________________________________________________________________________________
Дана строка '1234567890'. Разбейте ее на массив с элементами
'1', '2', '3', '4', '5', '6', '7', '8', '9', '0'.
________________________________________________________________________________
<?php
$num = '1234567890';
print_r(str_split($num, 1));
?>
________________________________________________________________________________
Дана строка '1234567890'. Сделайте из нее строку '12-34-56-78-90'
не используя цикл.
________________________________________________________________________________
<?php
$num = '1234567890';
$arr = str_split($num, 2);
$arr = implode('-', $arr);
echo $arr;
?>
________________________________________________________________________________
Работа с strrev
Для решения задач данного блока вам понадобятся следующие функции: strrev.
 Дана строка '12345'. Сделайте из нее строку '54321'.
________________________________________________________________________________
<?php
$str = '12345';
echo strrev($str);
?>
________________________________________________________________________________
Проверьте, является ли слово палиндромом (одинаково читается во всех направлениях,
примеры таких слов: madam, otto, kayak, nun, level).
________________________________________________________________________________
<?php
$str = 'madam, otto, kayak, nun, level';
echo strrev($str);
?>

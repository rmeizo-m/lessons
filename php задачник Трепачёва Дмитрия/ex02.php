http://code.mu/books/php/
________________________________________________________________________________
Работа с массивами
Создайте массив $arr=['a', 'b', 'c']. Выведите значение массива на экран с
помощью функции var_dump().
________________________________________________________________________________
<?php
 $arr=['a', 'b', 'c'];
 var_dump($arr);
 echo "\n";
?>
________________________________________________________________________________
С помощью массива $arr из предыдущего номера выведите на экран содержимое первого,
второго и третьего элементов.
________________________________________________________________________________
<?php
$arr=['a', 'b', 'c'];
echo $arr[0].$arr[1].$arr[2];
echo "\n";
?>
________________________________________________________________________________
Создайте массив $arr=['a', 'b', 'c', 'd']
и с его помощью выведите на экран строку 'a+b, c+d'.
________________________________________________________________________________
<?php
$arr=['a', 'b', 'c', 'd'];
echo "'$arr[0] + $arr[1] , $arr[2] + $arr[3]'";
echo "\n";
?>
________________________________________________________________________________
 Создайте массив $arr с элементами 2, 5, 3, 9. Умножьте первый элемент массива
 на второй, а третий элемент на четвертый. Результаты сложите, присвойте
 переменной $result. Выведите на экран значение этой переменной.
 ________________________________________________________________________________
 <?php
$arr = [2, 5, 3, 9];
$result = $arr[0] * $arr[1] + $arr[2] * $arr[3];
echo $result;
echo "\n";
 ?>
________________________________________________________________________________
Заполните массив $arr числами от 1 до 5. Не объявляйте массив,
а просто заполните его присваиванием $arr[] = новое значение.
________________________________________________________________________________
<?php
//$a = "1, 2, 3, 4, 5";
$arr[] = 1;
$arr[] = 2;
$arr[] = 3;
$arr[] = 4;
$arr[] = 5;
var_dump($arr);
echo "\n";
?>

________________________________________________________________________________
Ассоциативные массивы
 Создайте массив $arr. Выведите на экран элемент с ключом 'c'.
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
________________________________________________________________________________
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
echo $arr['c'];
echo "\n";
?>
________________________________________________________________________________
Создайте массив $arr. Найдите сумму элементов этого массива.
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
________________________________________________________________________________
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
echo $arr['a'] + $arr['b'] + $arr['c'];
echo "\n";
?>
________________________________________________________________________________
Создайте массив заработных плат $arr. Выведите на экран зарплату Пети и Коли.
________________________________________________________________________________
<?php
$arr = ['Коля'=>'1000$', 'Вася'=>'500$', 'Петя'=>'200$'];
echo $arr['Петя']. "\n" . $arr['Коля'];
echo "\n";
?>
________________________________________________________________________________
 Создайте ассоциативный массив дней недели. Ключами в нем должны служить номера
 дней от начала недели (понедельник - должен иметь ключ 1, вторник - 2 и т.д.).
 Выведите на экран текущий день недели.
________________________________________________________________________________
<?php
$arr = [1 =>'пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
echo $arr[4];
echo "\n";
?>
________________________________________________________________________________
Пусть теперь номер дня недели хранится в переменной $day, например там лежит
число 3. Выведите день недели, соответствующий значению переменной $day.
________________________________________________________________________________
<?php
$day = 3;
$arr = [1 =>'пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
echo $arr[$day];
echo "\n";
?>

________________________________________________________________________________
 Создайте многомерный массив $arr. С его помощью выведите на экран слова
 'joomla', 'drupal', 'зеленый', 'красный'.
 $arr = [
	'cms'=>['joomla', 'wordpress', 'drupal'],
	'colors'=>['blue'=>'голубой', 'red'=>'красный', 'green'=>'зеленый']
];
________________________________________________________________________________

<?php
$arr = [
	'cms'=>['joomla', 'wordpress', 'drupal'],
	'colors'=>['blue'=>'голубой', 'red'=>'красный', 'green'=>'зеленый']
];
echo $arr['cms'][0]. ' ' .$arr['cms'][2];
echo "\n";
echo $arr['colors']['blue']. ' ' . $arr['colors']['green'];
?>

________________________________________________________________________________
 Создайте двухмерный массив. Первые два ключа - это 'ru' и 'en'. Пусть первый
 ключ содержит элемент, являющийся массивом названий дней недели по-русски,
 а второй - по-английски. Выведите с помощью этого массива понедельник
 по-русски и среду по английски (пусть понедельник - это первый день).
________________________________________________________________________________
<?php
$arr = [
  'ru' =>[ 1 => 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'],
  'en' =>[ 1 => 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday	']
];
echo $arr['ru'][1];
echo "\n";
echo $arr['en'][3];
echo "\n";
 ?>
________________________________________________________________________________
Пусть теперь в переменной $lang хранится язык (она принимает одно из значений или
'ru', или 'en' - либо то, либо то), а в переменной $day - номер дня. Выведите
словом день недели, соответствующий переменным $lang и $day. То есть: если,
 к примеру, $lang = 'ru' и $day = 3 - то выведем 'среда'.
________________________________________________________________________________
<?php
$arr = [
  'ru' =>[ 1 => 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'],
  'en' =>[ 1 => 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday	']
];
$lang = 'en';
$day = 2;
echo $arr[$lang][$day];
echo "\n";
?>

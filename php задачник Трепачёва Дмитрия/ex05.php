http://code.mu/tasks/php/base/rabota-s-matematicheskimi-funkciyami-v-php.html
________________________________________________________________________________
Работа с %
 Даны переменные $a=10 и $b=3. Найдите остаток от деления $a на $b.
________________________________________________________________________________
<?php
$a = 10;
$b = 3;
echo $a % $b;
?>
________________________________________________________________________________
Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это
так - выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком'
 и остаток от деления.
________________________________________________________________________________
<?php
$a = 10;
$b = 2;
if ( $a % $b == 0){
  echo 'Делится, результат деления: ' . ($a / $b);
} else {
  echo 'Делится с остатком '. ($a / $b);
}
?>
________________________________________________________________________________
Для решения задач данного блока вам понадобятся следующие функции: sqrt, pow.
 Возведите 2 в 10 степень. Результат запишите в переменную $st.
________________________________________________________________________________
<?php
$st = pow(2, 10);
echo $st;
?>
________________________________________________________________________________
Найдите квадратный корень из 245.
________________________________________________________________________________
<?php
$st = sqrt(245);
echo $st;
?>
________________________________________________________________________________
Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите корень из суммы квадратов
его элементов. Для решения воспользуйтесь циклом foreach.
________________________________________________________________________________
<?php
$arr = [ 4, 2, 5, 19, 13, 0, 1];
$a = 0;
foreach ($arr as $value) {
  $a += $value*$value;
}echo sqrt($a);
?>
________________________________________________________________________________
Работа с функциями округления
Для решения задач данного блока вам понадобятся следующие функции: round, ceil, floor.
 Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.
________________________________________________________________________________
<?php
$sqrt =sqrt(379);
echo round($sqrt)."\n";
echo round($sqrt, 2)."\n";
echo round($sqrt, 3);
?>
________________________________________________________________________________
Найдите квадратный корень из 587. Округлите результат в большую и меньшую
сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.
________________________________________________________________________________
<?php
$sqrt = sqrt(587);
$res1 = ceil($sqrt);
$res2 = floor($sqrt);
$arr = ['floor'=>$res2, 'ceil'=>$res1];
print_r($arr);
?>
________________________________________________________________________________
Работа с min и max
Для решения задач данного блока вам понадобятся следующие функции: min, max.
 Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.
________________________________________________________________________________
<?php
$arr = [4, -2, 5, 19, -130, 0, 10];
echo min($arr)."\n";
echo max($arr);
?>
________________________________________________________________________________
Работа с рандомом
Для решения задач данного блока вам понадобятся следующие функции: mt_rand.
 Выведите на экран случайное число от 1 до 100.
________________________________________________________________________________
<?php
echo mt_rand(1, 100);
?>
________________________________________________________________________________
Заполните массив 10-ю случайными числами
________________________________________________________________________________
<?php
$i = 1;
$arr = [];
while($i <=10){
  $i++;
  $arr[] = mt_rand(1, 100);
} var_dump($arr);
?>
________________________________________________________________________________
Работа с модулем
Для решения задач данного блока вам понадобятся следующие функции: abs.
Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте
работу скрипта самостоятельно для различных $a и $b.
________________________________________________________________________________
<?php
$a = -20;
$b = 7;
echo abs($a -$b);
?>
________________________________________________________________________________
Дан массив в числами, к примеру [1, 2, -1, -2, 3, -3]. Создайте из него новый
массив так, чтобы отрицательные числа стали положительными, то есть у нас должен
получиться такой массив: [1, 2, 1, 2, 3, 3].
________________________________________________________________________________
<?php
$arr = [1, 2, -1, -2, 3, -3];
$b = [];
foreach ($arr as $value) {
  $b[] = abs($value);
} print_r($b);
?>
________________________________________________________________________________
Дано число, например 30. У этого числа есть делители - числа, на которое оно
делится без остатка. Делители числа 30 - это 1, 2, 3, 5, 6, 10, 15, 30.
Задача: сделайте массив делителей нашего числа. Число может быть любым, не обязательно, 30.
________________________________________________________________________________
<!-- <?php
$a = 30;
$b = [];
while ($a != 0){
  $b[] = $a % 2;
} echo $b;
?> -->
________________________________________________________________________________
Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Узнайте, сколько первых элементов
массива нужно сложить, чтобы сумма получилась больше 10.
________________________________________________________________________________
<?php
$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
foreach ($arr as $value) {
  if ($value + $value == 10) {
    break;
    echo "равен 10";
  }
}
?>
